||||||||||||||||||||||||||||08/03/22|||||||||||||||||||||||||||

Instalação do git:
https://git-scm.com/download/win

- Abrir o explorer, clicar com o botão direito e clicar em "Git bach here":

git --version //acessa a versão do Git
git config --list //mostra uma lista de informações da conta
git config --global user.name "filipe-oliv95" //insere o user.name
git config --global user.email "filipec.oliveira95@gmail.com" //insere o user.email

https://docs.github.com/pt/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
ssh-keygen -t rsa -b 4096 -C "filipec.oliveira95@gmail.com" //cria uma chave em C:\Users\Pichau\.ssh

- Abrir o arquivo com o bloco de notas
- Copiar a chave e colar no github (settings / SSH)

Mas, o que é SSH? https://www.youtube.com/watch?v=z7jVOenqFYk

git init //cria um repositório local
git status //mostra o conteudo da pasta
git add . //selecionou todas as pastas para serem rastreadas no Git

- Sincronizar o repositório local com o repositorio remoto (
git remote add origin https://github.com/filipe-oliv95/logica-2023.git

git status / Aula git add . / git commit -m "segundo commit" / git push //processo para atualizar pasta de arquivos no github

git clone git@github.com:filipe-oliv95/teste-aula2.git //(clonar)link copiado do repositório do github

||||||||||||||||||||||||||||09/03/22|||||||||||||||||||||||||||

BRANCH
O projeto principal fica no main, e as ramificações são as branchs - quando pessoas secundárias
desenvovem o projeto a parte

git branch //exibe a branch local
git branch -a //exibe a branch local e remota
git branch exemplo //cria uma nova branch
git checkout exemplo //troca de branch

echo "teste de branch exemplo" > aula4branch.txt //cria um arquivo na branch exemplo

git checkout main //volta para o main, e os arquivos criados na branch somem

git merge exemplo //mescla o exemplo com o main

git pull //traz os arquivos do GitHub para o computador

||||||||||||||||||||||||||||10/03/22|||||||||||||||||||||||||||

Teste para voltar o commit:
- Criar pasta TesteReset no disco C:\
- Criar repositório:

git init //cria um repositório local
git add . //selecionou todas as pastas para serem rastreadas no Git
git commit -m "segundo commit"
git log //mostra os commits realizados

- Voltar o commit: copiar o código do primeiro commit

git reset --hard b8dfb2bc53b4d500ec66be7d4063a079f20fe5b2 // retorna ao primeiro commit, APAGANDO os outros arquivos
git reset --soft b8dfb2bc53b4d500ec66be7d4063a079f20fe5b2 // retorna ao primeiro commit, mas MANTÉM os arquivos, NAO precisa do git add . após o comando. Mais utilizado
git reset --mixed b8dfb2bc53b4d500ec66be7d4063a079f20fe5b2 // precisa do git add . após o comando


